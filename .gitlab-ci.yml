image: node:8.11-stretch

stages:
  - build
  - deploy
  - notify

cache:
  paths:
    - node_modules/

install_dependencies:
  stage: build
  script: "npm install"
  artifacts:
    paths:
      - node_modules/

deploy_to_gcp:
  stage: deploy
  environment:
    name: "production"
    url: "https://michaelhollister.me"
  script:
    - "apt-get update -qq && apt-get install -y -qq sshpass"
    - "npm run bundle"
    - "sshpass -V"
    # stop the service
    - "sshpass -p \"$REMOTE_PASSWORD\" ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_SERVER} \"/usr/bin/sudo systemctl stop http-proxy\""
    # scp the binary
    - "sshpass -p \"$REMOTE_PASSWORD\" scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ./bin/http-proxy ${REMOTE_USER}@${REMOTE_SERVER}:/usr/local/bin/http-proxy"
    - "sshpass -p \"$REMOTE_PASSWORD\" ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_SERVER} \"/bin/chmod +x /usr/local/bin/http-proxy\""
    # start the service
    - "sshpass -p \"$REMOTE_PASSWORD\" ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_SERVER} \"/usr/bin/sudo systemctl start http-proxy\""
  when: on_success
  only: 
    - master

notify_build_failure:
  stage: notify
  script:
    - "apt-get update -qq && apt-get install -y -qq curl"
    - "curl -X POST -d 'message=\"deploy failed\"' https://${HTTP_PROXY_USER}:${HTTP_PROXY_AUTHKEY}@michaelhollister.me/api/pushover"
  when: on_failure

notify_build_success:
  stage: notify
  script:
    - "apt-get update -qq && apt-get install -y -qq curl"
    - "curl -X POST -d 'message=\"deploy successful\"' https://${HTTP_PROXY_USER}:${HTTP_PROXY_AUTHKEY}@michaelhollister.me/api/pushover"
  when: on_success
